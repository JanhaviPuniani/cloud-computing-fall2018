{
	"AWSTemplateFormatVersion":"2010-09-09",
	"Description":"Cloud Formation Template - CSYE6225 - Creating EC2 instance , Security Groups and Ingress Rules",
	"Parameters":{
		"EC2Name":{
			"Type":"String"
		},
		"EC2SecurityGroup":{
			"Type":"String"
		},
		"SubnetId1":{
			"Type":"String"
		},
		"VpcId":{
			"Type":"String"
		},
		"EC2VolumeSize":{
			"Type":"String"
		},
		"EC2VolumeType":{
			"Type":"String"
		},
		"AMIImage":{
			"Type":"String"
		},
		"DynamoDBName":{
			"Type":"String"
		},
		"BucketName":{
			"Type":"String"
		},
		"MasterUsername":{
			"Type":"String"
		},
		"MasterUserPwd":{
			"Type":"String"
		},
		"DBName":{
			"Type":"String"
		},
		"DBInstanceClass":{
			"Type":"String"
		},
		"DBInstanceIdentifier":{
			"Type":"String"
		},
		"DBEngine":{
			"Type":"String"
		},
		"SubnetId2":{
			"Type":"String"
		},
		"SubnetId3":{
			"Type":"String"
		},
		"RDSSecurityGroup":{
			"Type":"String"
		},
		"EC2RoleName":{
			"Type":"String"
		},
		"EC2Key":{
			"Type":"String"
		}
	},
	"Resources":{
		"ourEC2Instance":{
			"Type":"AWS::EC2::Instance",
			"Properties":{
				"InstanceType":"t2.micro",
				"DisableApiTermination":true,
				"KeyName":{"Ref": "EC2Key"}, 
				"ImageId":{
					"Ref":"AMIImage"
				},
				"UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash -xe ",
                                "sudo yum install ruby ntp wget java-1.8.0-openjdk-devel -y",
                                "sudo systemctl start ntpd -y",
                                "sudo systemctl enable ntpd -y",
                                "sudo groupadd tomcat -y",
                                "sudo useradd -M -s /bin/nologin -g tomcat -d /opt/tomcat tomcat -y",
                                "cd /tmp",
                                "sudo wget http://apache.mirrors.pair.com/tomcat/tomcat-8/v8.5.34/bin/apache-tomcat-8.5.34.tar.gz -y",
                                "mkdir /opt/tomcat",
                                "sudo tar xvf apache-tomcat-8*tar.gz -C /opt/tomcat --strip-components=1 -y",
                                "cd /opt/tomcat",
                                "sudo chgrp -R tomcat /opt/tomcat -y",
                                "sudo chmod -R g+r conf -y",
                                "sudo chmod g+x conf -y",
                                "sudo chown -R tomcat webapps/ work/ temp/ logs/ -y",
                                "cd /usr/lib/systemd/system -y",
                                "sudo touch tomcat.service -y",
                                "echo '[Unit]' > tomcat.service -y",
                                "echo 'Description=Apache Tomcat Web Application Container' >> tomcat.service -y",
                                "echo 'After=syslog.target network.target' >> tomcat.service -y",
                                "echo '[Service]' >> tomcat.service -y",
                                "echo 'Type=forking' >> tomcat.service -y",
                                "echo 'Environment=JAVA_HOME=/usr/lib/jvm/jre' >> tomcat.service -y",
                                "echo 'Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid' >> tomcat.service -y",
                                "echo 'Environment=CATALINA_HOME=/opt/tomcat' >> tomcat.service -y",
                                "echo 'Environment=CATALINA_BASE=/opt/tomcat' >> tomcat.service -y",
                                "echo 'Environment=\"CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC\"' >> tomcat.service -y",
                                "echo 'Environment=\"JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom\"' >> tomcat.service -y",
                                "echo 'ExecStart=/opt/tomcat/bin/startup.sh' >> tomcat.service -y",
                                "echo 'ExecStop=/bin/kill -15 $MAINPID' >> tomcat.service -y",
                                "echo 'User=tomcat' >> tomcat.service -y",
                                "echo 'Group=tomcat' >> tomcat.service -y",
                                "echo 'UMask=0007' >> tomcat.service -y",
                                "echo 'RestartSec=10' >> tomcat.service -y",
                                "echo 'Restart=always' >> tomcat.service -y",
                                "echo '[Install]' >> tomcat.service -y",
                                "echo 'WantedBy=multi-user.target' >> tomcat.service -y",
                                "sudo systemctl daemon-reload -y",
                                "#systemctl start cloudwatch.service -y",
                                "#systemctl enable cloudwatch.service -y",
                                "sudo systemctl enable tomcat.service -y",
                                "sudo systemctl start tomcat.service -y"
                            ]
                        ]
                    }
                },
				"BlockDeviceMappings":[
					{
						"DeviceName":"/dev/sda1",
						"Ebs":{
							"DeleteOnTermination":true,
							"VolumeSize":{
								"Ref":"EC2VolumeSize"
							},
							"VolumeType":{
								"Ref":"EC2VolumeType"
							}
						}
					}
				],
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Ref": "EC2Name"
					}
				}],
				"SecurityGroupIds":[
					{
						"Ref":"EC2SecurityGroup"
					}
				],
				"SubnetId":{
					"Ref":"SubnetId1"
				},
				"IamInstanceProfile":{
					"Ref":"ourIAMInstanceProfile"
				}
			}
		},
		"ourIAMInstanceProfile":{
			"Type":"AWS::IAM::InstanceProfile",
			"Properties":{
				"Path":"/",
				"Roles":[
					{
						"Ref":"EC2RoleName"
					}
				]
			}
		},
		"ourDynamoTable":{
			"Type":"AWS::DynamoDB::Table",
			"Properties":{
				"KeySchema":[
					{
						"AttributeName":"id",
						"KeyType":"HASH"
					}
				],
				"AttributeDefinitions":[
					{
						"AttributeName":"id",
						"AttributeType":"S"
					}
				],
				"TableName":{
					"Ref":"DynamoDBName"
				},
				"ProvisionedThroughput":{
					"ReadCapacityUnits":"5",
					"WriteCapacityUnits":"5"
				}
			}
		},
		"ourS3Bucket":{
			"Type":"AWS::S3::Bucket",
			"Description":"S3 Bucket to store attachment files",
			"Properties":{
				"AccessControl":"Private",
				"BucketName":{
					"Ref":"BucketName"
				}
			}
		},
		"ourRDSDBSubnet":{
			"Type":"AWS::RDS::DBSubnetGroup",
			"Properties":{
				"DBSubnetGroupDescription":"Subnet Group fro RDS Instance",
				"SubnetIds":[
					{
						"Ref":"SubnetId2"
					},
					{
						"Ref":"SubnetId3"
					}
				]
			}
		},
		"ourRDSInstance":{
			"Type":"AWS::RDS::DBInstance",
			"Properties":{
				"AllocatedStorage":"10",
				"MasterUsername":{
					"Ref":"MasterUsername"
				},
				"MasterUserPassword":{
					"Ref":"MasterUserPwd"
				},
				"MultiAZ":false,
				"PubliclyAccessible":false,
				"DBName":{
					"Ref":"DBName"
				},
				"DBInstanceClass":{
					"Ref":"DBInstanceClass"
				},
				"DBInstanceIdentifier":{
					"Ref":"DBInstanceIdentifier"
				},
				"Engine":{
					"Ref":"DBEngine"
				},
				"DBSubnetGroupName":{
					"Ref":"ourRDSDBSubnet"
				},
				"VPCSecurityGroups":[
					{
						"Ref":"RDSSecurityGroup"
					}
				]
			}
		}
	}
}